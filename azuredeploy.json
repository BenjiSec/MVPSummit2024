{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "metadata": {
        "title": "",
        "description": "",
        "prerequisites": "",
        "postDeployment": [],
        "prerequisitesDeployTemplateFile": "",
        "lastUpdateTime": "",
        "entities": [],
        "tags": [],
        "support": {
            "tier": "community",
            "armtemplate": "Generated from https://github.com/Azure/Azure-Sentinel/tree/master/Tools/Playbook-ARM-Template-Generator"
        },
        "author": {
            "name": ""
        }
    },
    "parameters": {
        "PlaybookName": {
            "defaultValue": "MVPSummit-AttackDisruption",
            "type": "string"
        },
        "SOC Group ID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for SOC Group ID"
            }
        },
        "X-PAN-KEY": {
            "type": "string",
            "metadata": {
                "description": "Enter value for X-PAN-KEY"
            }
        },
        "tenantID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for tenantID"
            }
        },
        "clientID": {
            "type": "string",
            "metadata": {
                "description": "Enter value for clientID"
            }
        },
        "client_secret": {
            "type": "string",
            "metadata": {
                "description": "Enter value for client_secret"
            }
        }
    },
    "variables": {
        "AzureadConnectionName": "[concat('Azuread-', parameters('PlaybookName'))]",
        "Office365ConnectionName": "[concat('Office365-', parameters('PlaybookName'))]",
        "WdatpConnectionName": "[concat('Wdatp-', parameters('PlaybookName'))]"
    },
    "resources": [
        {
            "properties": {
                "provisioningState": "Succeeded",
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        },
                        "HuntingQuery": {
                            "type": "string",
                            "defaultValue": "{\"Query\":\"EmailPostDeliveryEvents | where Timestamp > ago(1h) | where ActionType has 'ZAP' and ActionResult == 'Error' | project ZapTime = Timestamp, ActionType, NetworkMessageId, RecipientEmailAddress | join kind=inner IdentityLogonEvents on $left.RecipientEmailAddress == $right.AccountUpn | where Timestamp between ((ZapTime - 24h) .. (ZapTime + 24h)) | join IdentityInfo on AccountUpn | join DeviceLogonEvents on AccountName | project     ZapTime,     ActionType,     NetworkMessageId,     RecipientEmailAddress,     AccountUpn,     LogonTime = Timestamp,     AccountDisplayName,     Protocol,     DeviceName,     AccountName,     DeviceId\"}"
                        },
                        "SOC Group ID": {
                            "type": "string",
                            "defaultValue": "[parameters('SOC Group ID')]"
                        },
                        "X-PAN-KEY": {
                            "type": "string",
                            "defaultValue": "[parameters('X-PAN-KEY')]"
                        },
                        "clientID": {
                            "type": "string",
                            "defaultValue": "[parameters('clientID')]"
                        },
                        "client_secret": {
                            "type": "string",
                            "defaultValue": "[parameters('client_secret')]"
                        },
                        "tenantID": {
                            "type": "string",
                            "defaultValue": "[parameters('tenantID')]"
                        }
                    },
                    "triggers": {
                        "Recurrence_(every_1_hour)": {
                            "recurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "evaluatedRecurrence": {
                                "frequency": "Hour",
                                "interval": 1
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "For_each": {
                            "foreach": "@body('Parse_JSON')?['Results']",
                            "actions": {
                                "For_each__tag_on_the_Device": {
                                    "foreach": "@body('Machines_-_Get_single_machine')?['machineTags']",
                                    "actions": {
                                        "Condition_Is_it_Sensitive_or_a_SOC_Device": {
                                            "actions": {
                                                "Actions_-_Isolate_machine": {
                                                    "runAfter": {},
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "Comment": "Isolated due to Suspicious mailbox behavior and failed ZAP Action",
                                                            "IsolationType": "Selective"
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/api/machines/@{encodeURIComponent(body('Machines_-_Get_single_machine')?['id'])}/isolate"
                                                    }
                                                },
                                                "For_each_Group_membership": {
                                                    "foreach": "@body('Get_groups_of_a_user_(V2)')?['value']",
                                                    "actions": {
                                                        "Condition_Is_this_a_SOC_Member": {
                                                            "actions": {
                                                                "Remove_Member_From_Group": {
                                                                    "runAfter": {},
                                                                    "type": "ApiConnection",
                                                                    "inputs": {
                                                                        "host": {
                                                                            "connection": {
                                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                                            }
                                                                        },
                                                                        "method": "delete",
                                                                        "path": "/v1.0/groups/@{encodeURIComponent(parameters('SOC Group ID'))}/members/@{encodeURIComponent(items('For_each_Group_membership'))}/$ref"
                                                                    }
                                                                }
                                                            },
                                                            "runAfter": {},
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@items('For_each_Group_membership')",
                                                                            "@parameters('SOC Group ID')"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Get_groups_of_a_user_(V2)": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Foreach"
                                                },
                                                "Get_groups_of_a_user_(V2)": {
                                                    "runAfter": {
                                                        "Actions_-_Isolate_machine": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "ApiConnection",
                                                    "inputs": {
                                                        "body": {
                                                            "securityEnabledOnly": true
                                                        },
                                                        "host": {
                                                            "connection": {
                                                                "name": "@parameters('$connections')['azuread']['connectionId']"
                                                            }
                                                        },
                                                        "method": "post",
                                                        "path": "/v2/v1.0/users/@{encodeURIComponent(items('For_each')?['RecipientEmailAddress'])}/getMemberGroups"
                                                    }
                                                }
                                            },
                                            "runAfter": {},
                                            "else": {
                                                "actions": {
                                                    "HTTP_-_Block_Privileged_App_Usage_to_Internet_on_Firewall": {
                                                        "runAfter": {
                                                            "Send_an_email_(V2)": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "Http",
                                                        "inputs": {
                                                            "body": "\"entry\": [\n        {\n            \"@location\": \"vsys\",\n            \"@name\": \"test\",\n            \"@vsys\": \"vsys1\",\n            \"action\": \"deny\",\n            \"application\": {\n                \"member\": [\n                    \"ssl\"\n                ]\n            },\n            \"category\": {\n                \"member\": [\n                    \"any\"\n                ]\n            },\n            \"destination\": {\n                \"member\": [\n                    \"any\"\n                ]\n            },\n            \"from\": {\n                \"member\": [\n                    \"internal\"\n                ]\n            },\n            \"hip-profiles\": {\n                \"member\": [\n                    \"any\"\n                ]\n            },\n            \"service\": {\n                \"member\": [\n                    \"privileged-applications\"\n                ]\n            },\n            \"source\": {\n                \"member\": [\n                    \"any\"\n                ]\n            },\n            \"source-user\": {\n                \"member\": [\n                    \"@{items('For_each')?['RecipientEmailAddress']}\"\n                ]\n            },\n            \"to\": {\n                \"member\": [\n                    \"any\"\n                ]\n            }\n        }\n    ]",
                                                            "headers": {
                                                                "X-PAN-KEY": "@{parameters('X-PAN-KEY')}"
                                                            },
                                                            "method": "POST",
                                                            "uri": "https://firewall.threatctf.com/restapi/pan-os_version/Policies/SecurityRules?location=vsys&vsys=vsys1&name=BlockUsers"
                                                        },
                                                        "runtimeConfiguration": {
                                                            "contentTransfer": {
                                                                "transferMode": "Chunked"
                                                            }
                                                        }
                                                    },
                                                    "Send_an_email_(V2)": {
                                                        "runAfter": {
                                                            "Update_user": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "Body": "<p>Dear User ,</p><p>We have observed suspicious behavior on your mailbox. We attempted to remove the malicious email however, we were not able to.</p><br><p>Please make sure you do not respond to the email with subject </p><br><p>\"@{items('For_each')?['Title']}\" </p><br><p>which you received today. </p><br><p>Make sure you monitor your Microsoft Teams messages. We will contact you over this communication channel.</p><br><p>In case you have any question, please reach out to the SOC referencing your Message ID : @{items('For_each')?['NetworkMessageID']}</p><br><p>Thank you,</p><br><p>ThreatCTF SOC Team</p>",
                                                                "Cc": "soc@corp.threatctf.com",
                                                                "Importance": "High",
                                                                "Subject": "SecAutomation : Your account has been tagged as potentially Compromised",
                                                                "To": "@items('For_each')?['RecipientEmailAddress']"
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['office365']['connectionId']"
                                                                }
                                                            },
                                                            "method": "post",
                                                            "path": "/v2/Mail"
                                                        }
                                                    },
                                                    "Update_user": {
                                                        "runAfter": {},
                                                        "type": "ApiConnection",
                                                        "inputs": {
                                                            "body": {
                                                                "customProperties": {
                                                                    "Status": "Potentially Compromised"
                                                                }
                                                            },
                                                            "host": {
                                                                "connection": {
                                                                    "name": "@parameters('$connections')['azuread']['connectionId']"
                                                                }
                                                            },
                                                            "method": "patch",
                                                            "path": "/v1.0/users/@{encodeURIComponent(items('For_each')?['RecipientEmailAddress'])}"
                                                        }
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "or": [
                                                    {
                                                        "equals": [
                                                            "@items('For_each__tag_on_the_Device')",
                                                            "Sensitive"
                                                        ]
                                                    },
                                                    {
                                                        "equals": [
                                                            "@items('For_each__tag_on_the_Device')",
                                                            "CSOC"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        }
                                    },
                                    "runAfter": {
                                        "Machines_-_Get_single_machine": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach"
                                },
                                "Machines_-_Get_single_machine": {
                                    "runAfter": {},
                                    "type": "ApiConnection",
                                    "inputs": {
                                        "host": {
                                            "connection": {
                                                "name": "@parameters('$connections')['wdatp']['connectionId']"
                                            }
                                        },
                                        "method": "get",
                                        "path": "/api/machines/@{encodeURIComponent(items('For_each')?['DeviceId'])}"
                                    }
                                }
                            },
                            "runAfter": {
                                "Parse_JSON": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Foreach"
                        },
                        "HTTP_(Query_to_XDR_Hunting_API)": {
                            "runAfter": {},
                            "type": "Http",
                            "inputs": {
                                "authentication": {
                                    "audience": "https://api.security.microsoft.com",
                                    "clientId": "@{parameters('clientID')}",
                                    "secret": "@{parameters('client_secret')}",
                                    "tenant": "@{parameters('tenantID')}",
                                    "type": "ActiveDirectoryOAuth"
                                },
                                "body": "@json(parameters('HuntingQuery'))",
                                "method": "POST",
                                "uri": "https://api.security.microsoft.com/api/advancedhunting/run"
                            },
                            "runtimeConfiguration": {
                                "contentTransfer": {
                                    "transferMode": "Chunked"
                                }
                            }
                        },
                        "Parse_JSON": {
                            "runAfter": {
                                "HTTP_(Query_to_XDR_Hunting_API)": [
                                    "Succeeded"
                                ]
                            },
                            "type": "ParseJson",
                            "inputs": {
                                "content": "@body('HTTP_(Query_to_XDR_Hunting_API)')",
                                "schema": {
                                    "properties": {
                                        "Results": {
                                            "items": {
                                                "properties": {
                                                    "DeviceId": {
                                                        "type": "string"
                                                    },
                                                    "NetworkMessageID": {
                                                        "type": "string"
                                                    },
                                                    "RecipientEmailAddress": {
                                                        "type": "string"
                                                    },
                                                    "Severity": {
                                                        "type": "string"
                                                    },
                                                    "Title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Title",
                                                    "DeviceId",
                                                    "Severity"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Schema": {
                                            "items": {
                                                "properties": {
                                                    "Name": {
                                                        "type": "string"
                                                    },
                                                    "Type": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "Name",
                                                    "Type"
                                                ],
                                                "type": "object"
                                            },
                                            "type": "array"
                                        },
                                        "Stats": {
                                            "properties": {
                                                "ExecutionTime": {
                                                    "type": "number"
                                                },
                                                "dataset_statistics": {
                                                    "items": {
                                                        "properties": {
                                                            "table_row_count": {
                                                                "type": "integer"
                                                            },
                                                            "table_size": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "required": [
                                                            "table_row_count",
                                                            "table_size"
                                                        ],
                                                        "type": "object"
                                                    },
                                                    "type": "array"
                                                },
                                                "resource_usage": {
                                                    "properties": {
                                                        "cache": {
                                                            "properties": {
                                                                "disk": {
                                                                    "properties": {
                                                                        "hits": {
                                                                            "type": "integer"
                                                                        },
                                                                        "misses": {
                                                                            "type": "integer"
                                                                        },
                                                                        "total": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "memory": {
                                                                    "properties": {
                                                                        "hits": {
                                                                            "type": "integer"
                                                                        },
                                                                        "misses": {
                                                                            "type": "integer"
                                                                        },
                                                                        "total": {
                                                                            "type": "integer"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "cpu": {
                                                            "properties": {
                                                                "kernel": {
                                                                    "type": "string"
                                                                },
                                                                "total cpu": {
                                                                    "type": "string"
                                                                },
                                                                "user": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "memory": {
                                                            "properties": {
                                                                "peak_per_node": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {
                            "azuread": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                                "connectionName": "[variables('AzureadConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                            },
                            "office365": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                                "connectionName": "[variables('Office365ConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                            },
                            "wdatp": {
                                "connectionId": "[resourceId('Microsoft.Web/connections', variables('WdatpConnectionName'))]",
                                "connectionName": "[variables('WdatpConnectionName')]",
                                "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Wdatp')]"
                            }
                        }
                    }
                }
            },
            "name": "[parameters('PlaybookName')]",
            "type": "Microsoft.Logic/workflows",
            "location": "[resourceGroup().location]",
            "tags": {
                "hidden-SentinelTemplateName": "MVPSummit",
                "hidden-SentinelTemplateVersion": "1.0"
            },
            "identity": {
                "type": "SystemAssigned"
            },
            "apiVersion": "2017-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Web/connections', variables('AzureadConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('Office365ConnectionName'))]",
                "[resourceId('Microsoft.Web/connections', variables('WdatpConnectionName'))]"
            ]
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('AzureadConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('AzureadConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Azuread')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('Office365ConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('Office365ConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Office365')]"
                }
            }
        },
        {
            "type": "Microsoft.Web/connections",
            "apiVersion": "2016-06-01",
            "name": "[variables('WdatpConnectionName')]",
            "location": "[resourceGroup().location]",
            "kind": "V1",
            "properties": {
                "displayName": "[variables('WdatpConnectionName')]",
                "customParameterValues": {},
                "api": {
                    "id": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Web/locations/', resourceGroup().location, '/managedApis/Wdatp')]"
                }
            }
        }
    ]
}
